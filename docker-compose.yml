services:
  redis:
    image: redis:7-alpine
    container_name: redis-server
    command: redis-server --save 60 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hc_frontend_new
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=http://gateway:8080
    depends_on:
      - gateway
    networks:
      - app-network

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./gateway/.env
    depends_on:
      - redis
    networks:
      - app-network

  chatbot:
    build:
      context: ./service/chatbot-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - ./service/chatbot-service/.env
    networks:
      - app-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  report:
    build:
      context: ./service/report-service
      dockerfile: Dockerfile
    container_name: hc_report_new
    ports:
      - "8082:8082"
    env_file:
      - ./service/report-service/.env
    networks:
      - app-network

  disclosure:
    build:
      context: ./service/disclosure-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    env_file:
      - ./service/disclosure-service/.env
    networks:
      - app-network

  climate-service:
    build:
      context: ./service/climate-service
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    env_file:
      - ./service/climate-service/.env
    networks:
      - app-network

  auth:
    build:
      context: ./service/auth-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    env_file:
      - ./service/auth-service/.env
    depends_on:
      - redis
    networks:
      - app-network

  n8n:
    build:
      context: ./n8n
      dockerfile: Dockerfile
    container_name: hc_n8n
    ports:
      - "5678:5678"
    env_file:
      - ./n8n/.env
    volumes:
      - n8n_data:/home/node/.n8n
      - n8n_workflows:/data/workflows
      - ./n8n/workflows:/data/workflows/init
    networks:
      - app-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  training-service:
    build: ./training-service
    env_file:
      - ./training-service/.env
    volumes:
      - ./training-service/data:/app/data 
      - ./training-service/models:/app/models
      - ./training-service/outputs:/app/outputs  # 훈련 결과물 저장
      - ./training-service/logs:/app/logs        # 훈련 로그 저장
      - ./training-service/checkpoints:/app/checkpoints  # 체크포인트 저장
    networks:
      - app-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1 # GPU 1개 사용
              capabilities: [gpu] # GPU 사용 권한
volumes:
  redis-data:
  n8n_data:
  n8n_workflows:

networks:
  app-network:
    driver: bridge
